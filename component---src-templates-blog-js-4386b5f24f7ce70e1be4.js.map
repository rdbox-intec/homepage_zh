{"version":3,"sources":["webpack:///./src/components/PostCard/index.js","webpack:///./src/templates/blog.js","webpack:///./node_modules/core-js/modules/_flags.js","webpack:///./node_modules/core-js/modules/es6.regexp.to-string.js","webpack:///./node_modules/core-js/modules/es6.regexp.flags.js"],"names":["PostCard","_ref","posts","react_default","a","createElement","className","filter","post","node","frontmatter","templateKey","map","_ref2","style","border","padding","key","id","gatsby_browser_entry","to","fields","slug","title","date","excerpt","PaginationLink","props","test","disabled","text","url","BlogPage","render","pageContext","this","group","index","first","last","previousUrl","toString","nextUrl","websiteSchemaOrgJSONLD","@context","@type","config","siteUrl","name","siteTitle","alternateName","siteTitleAlt","Helmet_default","type","JSON","stringify","components_PostCard","blog_PaginationLink","Component","anObject","__webpack_require__","module","exports","that","result","global","ignoreCase","multiline","unicode","sticky","$flags","DESCRIPTORS","$toString","define","fn","RegExp","prototype","call","source","flags","R","concat","undefined","f","configurable","get"],"mappings":"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","file":"component---src-templates-blog-js-4386b5f24f7ce70e1be4.js","sourcesContent":["import React from 'react'\nimport {Link} from 'gatsby'\n\nconst PostCard = ({posts}) => {\n  return (\n    <div className='container'>\n      {posts\n        .filter(post => post.node.frontmatter.templateKey === 'article-page')\n        .map(({node: post}) => (\n          <div\n            className='content'\n            style={{border: '1px solid #eaecee', padding: '2em 4em'}}\n            key={post.id}\n          >\n            <p>\n              <Link className='has-text-primary' to={post.fields.slug}>\n                {post.frontmatter.title}\n              </Link>\n              <span> &bull; </span>\n              <small>{post.frontmatter.date}</small>\n            </p>\n            <p>\n              {post.excerpt}\n              <br />\n              <br />\n              <Link className='button is-small' to={post.fields.slug}>\n                                Keep Reading â†’\n              </Link>\n            </p>\n          </div>\n        ))}\n    </div>\n  )\n}\n\nexport default PostCard\n","import React, {Component} from 'react'\nimport {Link} from 'gatsby'\nimport config from '../../data/config'\nimport Helmet from 'react-helmet'\nimport PostCard from '../components/PostCard'\n\nconst PaginationLink = props => {\n  if (!props.test) {\n    return (\n      <Link to={`/blog/${props.url}`} className='button is-rounded'>\n        {props.text}\n      </Link>\n    )\n  } else {\n    return (\n      <span disabled className='button is-rounded'>\n        {props.text}\n      </span>\n    )\n  }\n}\n\nexport default class BlogPage extends Component {\n  render () {\n    const {pageContext} = this.props\n    const {group, index, first, last} = pageContext\n    const previousUrl = index - 1 === 1 ? '' : (index - 1).toString()\n    const nextUrl = (index + 1).toString() + '/'\n\n    const websiteSchemaOrgJSONLD = {\n      '@context': 'http://schema.org',\n      '@type': 'WebSite',\n      url: config.siteUrl,\n      name: config.siteTitle,\n      alternateName: config.siteTitleAlt ? config.siteTitleAlt : '',\n    }\n\n    return (\n      <div>\n        <Helmet>\n          <title>Blog | Gatsby Starter Business</title>\n          {/* Schema.org tags */}\n          <script type='application/ld+json'>\n            {JSON.stringify(websiteSchemaOrgJSONLD)}\n          </script>\n        </Helmet>\n        <section className='hero is-primary is-bold'>\n          <div className='hero-body'>\n            <div className='container'>\n              <div className='columns'>\n                <div className='column is-10 is-offset-1'>\n                  <div className='section'>\n                    <h1 className='title'>\n                      Blog\n                    </h1>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n        <section className='section'>\n          <PostCard posts={group} />\n          <section className='section'>\n            <div className='buttons is-centered'>\n              <PaginationLink test={first} url={previousUrl} text='Previous Page' />\n              <PaginationLink test={last} url={nextUrl} text='Next Page' />\n            </div>\n          </section>\n        </section>\n      </div>\n    )\n  }\n}\n","'use strict';\n// 21.2.5.3 get RegExp.prototype.flags\nvar anObject = require('./_an-object');\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.unicode) result += 'u';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","'use strict';\nrequire('./es6.regexp.flags');\nvar anObject = require('./_an-object');\nvar $flags = require('./_flags');\nvar DESCRIPTORS = require('./_descriptors');\nvar TO_STRING = 'toString';\nvar $toString = /./[TO_STRING];\n\nvar define = function (fn) {\n  require('./_redefine')(RegExp.prototype, TO_STRING, fn, true);\n};\n\n// 21.2.5.14 RegExp.prototype.toString()\nif (require('./_fails')(function () { return $toString.call({ source: 'a', flags: 'b' }) != '/a/b'; })) {\n  define(function toString() {\n    var R = anObject(this);\n    return '/'.concat(R.source, '/',\n      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);\n  });\n// FF44- RegExp#toString has a wrong name\n} else if ($toString.name != TO_STRING) {\n  define(function toString() {\n    return $toString.call(this);\n  });\n}\n","// 21.2.5.3 get RegExp.prototype.flags()\nif (require('./_descriptors') && /./g.flags != 'g') require('./_object-dp').f(RegExp.prototype, 'flags', {\n  configurable: true,\n  get: require('./_flags')\n});\n"],"sourceRoot":""}