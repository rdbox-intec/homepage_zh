{"version":3,"sources":["webpack:///./src/components/ArticleTemplate/index.js","webpack:///./src/components/SEO/index.js","webpack:///./src/components/Share/index.js","webpack:///./src/components/Disqus/index.js","webpack:///./src/templates/article-page.js","webpack:///./src/components/Content/index.js"],"names":["ArticleTemplate","_ref","content","contentComponent","cover","tags","meta_title","meta_desc","title","PostContent","Content","react_default","a","createElement","className","src","alt","style","marginTop","length","map","tag","key","gatsby_browser_entry","to","kebabCase","SE0","slug","date","postURL","config","siteUrl","realPrefix","pathPrefix","image","breadcrumbSchemaOrgJSONLD","@context","@type","itemListElement","position","item","@id","name","blogPostingSchemaOrgJSONLD","url","alternateName","siteTitleAlt","headline","mainEntityOfPage","author","userName","datePublished","dateModified","publisher","siteTitle","logo","description","Helmet_default","type","JSON","stringify","property","siteFBAppID","userTwitter","Share","render","_this$props","this","props","excerpt","mobile","iconSize","filter","count","RedditShareButton","RedditIcon","round","size","RedditShareCount","TwitterShareButton","TwitterIcon","GooglePlusShareButton","GooglePlusIcon","GooglePlusShareCount","FacebookShareButton","quote","FacebookIcon","FacebookShareCount","LinkedinShareButton","LinkedinIcon","LinkedinShareCount","TelegramShareButton","TelegramIcon","Component","Disqus","_this","_Component","call","state","toasts","notifyAboutComment","bind","assertThisInitialized_default","onSnackbarDismiss","slice","setState","push","text","disqusShortname","main_default","shortname","identifier","onNewComment","__webpack_require__","d","__webpack_exports__","pageQuery","ArticlePage","post","data","markdownRemark","SEO","frontmatter","meta_description","fields","components_ArticleTemplate","html","HTMLContent","components_Share","components_Disqus","propTypes","PropTypes","shape","object","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","dangerouslySetInnerHTML","__html","_ref2"],"mappings":"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","file":"component---src-templates-article-page-js-e4b2279c949eed866400.js","sourcesContent":["import React from 'react'\nimport Content from '../Content'\nimport { kebabCase } from 'lodash'\nimport { Link } from 'gatsby'\n\nconst ArticleTemplate = ({\n  content,\n  contentComponent,\n  cover,\n  meta_title,\n  meta_desc,\n  tags,\n  title,\n}) => {\n  const PostContent = contentComponent || Content\n  return (\n    <div>\n      <h1 className='title is-size-2 has-text-weight-bold is-bold-light'>\n        {title}\n      </h1>\n      <img src={cover} alt={title} />\n      <PostContent content={content} />\n      <div style={{ marginTop: `4rem` }}>\n        <h4>Tags</h4>\n        <ul className='taglist'>\n          {(tags && tags.length)\n            ? tags.map(tag => (\n              <li key={tag + `tag`}>\n                <Link to={`/tags/${kebabCase(tag)}/`}>{tag}</Link>\n              </li>\n            ))\n            : null\n          }\n        </ul>\n      </div>\n      <hr />\n    </div>\n  )\n}\n\nexport default ArticleTemplate\n","import React from 'react'\nimport config from '../../../data/config'\nimport Helmet from 'react-helmet'\n\nconst SE0 = ({ title, meta_title, meta_desc, cover, slug, date }) => {\n  let postURL = config.siteUrl + slug\n  const realPrefix = config.pathPrefix === '/' ? '' : config.pathPrefix\n  let image = config.siteUrl + realPrefix + cover\n\n  const breadcrumbSchemaOrgJSONLD = {\n    '@context': 'http://schema.org',\n    '@type': 'BreadcrumbList',\n    itemListElement: [\n      {\n        '@type': 'ListItem',\n        position: 1,\n        item: {\n          '@id': config.siteUrl,\n          name: 'Home',\n          image: config.siteUrl + '/icons/icon-512x512.png',\n        },\n      },\n      {\n        '@type': 'ListItem',\n        position: 2,\n        item: {\n          '@id': postURL,\n          name: title,\n          image,\n        },\n      },\n    ],\n  }\n\n  const blogPostingSchemaOrgJSONLD = {\n    '@context': 'http://schema.org',\n    '@type': 'BlogPosting',\n    url: postURL,\n    name: title,\n    alternateName: config.siteTitleAlt ? config.siteTitleAlt : '',\n    headline: title,\n    mainEntityOfPage: {\n      '@type': 'WebPage',\n      '@id': postURL,\n    },\n    'author': {\n      '@type': 'Person',\n      'name': config.userName,\n    },\n    image: {\n      '@type': 'ImageObject',\n      url: image,\n    },\n    datePublished: date,\n    dateModified: date,\n    publisher: {\n      '@type': 'Organization',\n      name: config.siteTitle,\n      logo: {\n        '@type': 'ImageObject',\n        url: config.siteUrl + '/icons/icon-512x512.png',\n      },\n    },\n    description: meta_desc,\n  }\n\n  return (\n    <Helmet>\n      <title>{meta_title}</title>\n      {/* General tags */}\n      <meta name='description' content={meta_desc} />\n      <meta name='image' content={cover} />\n      {/* Schema.org tags */}\n      <script type='application/ld+json'>\n        {JSON.stringify(breadcrumbSchemaOrgJSONLD)}\n      </script>\n      <script type='application/ld+json'>\n        {JSON.stringify(blogPostingSchemaOrgJSONLD)}\n      </script>\n      {/* OpenGraph tags */}\n      <meta property='og:url' content={postURL} />\n      <meta property='og:type' content='article' />\n      <meta property='og:title' content={title} />\n      <meta property='og:description' content={meta_desc} />\n      <meta property='og:image' content={image} />\n      <meta\n        property='fb:app_id'\n        content={config.siteFBAppID ? config.siteFBAppID : ''}\n      />\n      {/* Twitter Card tags */}\n      <meta name='twitter:card' content='summary_large_image' />\n      <meta\n        name='twitter:creator'\n        content={config.userTwitter ? config.userTwitter : ''}\n      />\n      <meta name='twitter:title' content={title} />\n      <meta name='twitter:description' content={meta_desc} />\n      <meta name='twitter:image' content={image} />\n    </Helmet>\n  )\n}\n\nexport default SE0\n","import React, {Component} from 'react'\nimport {\n  FacebookShareButton,\n  GooglePlusShareButton,\n  LinkedinShareButton,\n  TwitterShareButton,\n  TelegramShareButton,\n  RedditShareButton,\n  FacebookShareCount,\n  GooglePlusShareCount,\n  LinkedinShareCount,\n  RedditShareCount,\n  FacebookIcon,\n  TwitterIcon,\n  TelegramIcon,\n  GooglePlusIcon,\n  LinkedinIcon,\n  RedditIcon,\n} from 'react-share'\nimport config from '../../../data/config'\nimport './styles.sass'\n\nclass Share extends Component {\n  render () {\n    const {title, slug, excerpt, mobile} = this.props\n    const realPrefix = config.pathPrefix === '/' ? '' : config.pathPrefix\n    const url = config.siteUrl + realPrefix + slug\n\n    const iconSize = mobile ? 36 : 48\n    const filter = count => (count > 0 ? count : '')\n\n    return (\n      <div className='social-links'>\n        <RedditShareButton url={url} title={title}>\n          <RedditIcon round size={iconSize} />\n          <RedditShareCount url={url}>\n            {count => <div className='share-count'>{filter(count)}</div>}\n          </RedditShareCount>\n        </RedditShareButton>\n        <TwitterShareButton url={url} title={title}>\n          <TwitterIcon round size={iconSize} />\n        </TwitterShareButton>\n        <GooglePlusShareButton url={url}>\n          <GooglePlusIcon round size={iconSize} />\n          <GooglePlusShareCount url={url}>\n            {count => <div className='share-count'>{filter(count)}</div>}\n          </GooglePlusShareCount>\n        </GooglePlusShareButton>\n        <FacebookShareButton url={url} quote={excerpt}>\n          <FacebookIcon round size={iconSize} />\n          <FacebookShareCount url={url}>\n            {count => <div className='share-count'>{filter(count)}</div>}\n          </FacebookShareCount>\n        </FacebookShareButton>\n        <LinkedinShareButton\n          url={url}\n          title={title}\n          description={excerpt}\n        >\n          <LinkedinIcon round size={iconSize} />\n          <LinkedinShareCount url={url}>\n            {count => <div className='share-count'>{filter(count)}</div>}\n          </LinkedinShareCount>\n        </LinkedinShareButton>\n        <TelegramShareButton url={url}>\n          <TelegramIcon round size={iconSize} />\n        </TelegramShareButton>\n      </div>\n    )\n  }\n}\n\nexport default Share\n","import React, {Component} from 'react'\nimport ReactDisqusComments from 'react-disqus-comments'\nimport config from '../../../data/config'\n\nclass Disqus extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      toasts: [],\n    }\n    this.notifyAboutComment = this.notifyAboutComment.bind(this)\n    this.onSnackbarDismiss = this.onSnackbarDismiss.bind(this)\n  }\n\n  onSnackbarDismiss () {\n    const [, ...toasts] = this.state.toasts\n    this.setState({toasts})\n  }\n\n  notifyAboutComment () {\n    const toasts = this.state.toasts.slice()\n    toasts.push({text: 'New comment available!'})\n    this.setState({toasts})\n  }\n\n  render () {\n    const {title, slug} = this.props\n    if (!config.disqusShortname) {\n      return null\n    }\n    const url = config.siteUrl + config.pathPrefix + slug\n    return (\n      <ReactDisqusComments\n        shortname={config.disqusShortname}\n        identifier={title}\n        title={title}\n        url={url}\n        onNewComment={this.notifyAboutComment}\n      />\n    )\n  }\n}\n\nexport default Disqus\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {graphql} from 'gatsby'\nimport {HTMLContent} from '../components/Content'\nimport ArticleTemplate from '../components/ArticleTemplate'\nimport SE0 from '../components/SEO'\nimport Share from '../components/Share'\nimport Disqus from '../components/Disqus'\n\nconst ArticlePage = ({data}) => {\n  const {markdownRemark: post} = data\n  return (\n    <section className='section'>\n      <SE0\n        title={post.frontmatter.title}\n        meta_title={post.frontmatter.meta_title}\n        meta_desc={post.frontmatter.meta_description}\n        cover={post.frontmatter.cover}\n        slug={post.fields.slug}\n      />\n      <div className='container content'>\n        <div className='columns'>\n          <div className='column is-10 is-offset-1'>\n            <ArticleTemplate\n              content={post.html}\n              contentComponent={HTMLContent}\n              cover={post.frontmatter.cover}\n              meta_title={post.frontmatter.meta_title}\n              meta_desc={post.frontmatter.meta_description}\n              tags={post.frontmatter.tags}\n              title={post.frontmatter.title}\n            />\n            <Share\n              title={post.frontmatter.title}\n              slug={post.fields.slug}\n              excerpt={post.frontmatter.meta_description}\n            />\n            <hr />\n            <Disqus\n              title={post.frontmatter.title}\n              slug={post.fields.slug}\n            />\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nArticlePage.propTypes = {\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.object,\n  }),\n}\n\nexport default ArticlePage\n\nexport const pageQuery = graphql`\n  query ArticleByID($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      id\n      html\n      fields {\n            slug\n          }\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        cover\n        meta_title\n        meta_description\n        tags\n      }\n    }\n  }\n`\n","import React from 'react'\n\nexport const HTMLContent = ({ content, className }) => (\n  <div className={className} dangerouslySetInnerHTML={{ __html: content }} />\n)\n\nconst Content = ({ content, className }) => (\n  <div className={className}>{content}</div>\n)\n\nexport default Content\n"],"sourceRoot":""}